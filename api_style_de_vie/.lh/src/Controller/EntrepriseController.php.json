{
    "sourceFile": "src/Controller/EntrepriseController.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 29,
            "patches": [
                {
                    "date": 1690959125005,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1691476909682,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,8 +4,9 @@\n namespace App\\Controller;\n \n use App\\Entity\\User;\n use App\\Entity\\Entreprise;\n+use App\\Entity\\ProductGallery;\n use Doctrine\\ORM\\EntityManagerInterface;\n use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n use Symfony\\Component\\HttpFoundation\\JsonResponse;\n use Symfony\\Component\\HttpFoundation\\Request;\n@@ -177,8 +178,41 @@\n     return $this->json($filename,200);\n     //endfile\n }\n \n+    /**\n+ * @Route(\"/api/multiple_upload_file\", name=\"upload_multiple_file\", methods={\"POST\"})\n+ */\n+public function multiple_upload_file(Request $request){\n+    //file\n+    if (!$request->files->has('images')) {\n+       return new JsonResponse(['error' => 'No file uploaded.'], 400);\n+   }\n+\n+   // Handle the file upload\n+   $files = $request->files->get('images');\n+   $productGalleries=[];\n+   foreach ($files as $file){\n+    \n+        // Generate a unique filename\n+        $filename = md5(uniqid()) . '.' . $file->getClientOriginalExtension();\n+\n+        // Define the target directory\n+        $targetDirectory = $this->getParameter('kernel.project_dir') . '/public/uploads/';\n+\n+        // Move the uploaded file to the target directory\n+        try {\n+            $file->move($targetDirectory, $filename);\n+        } catch (\\Exception $e) {\n+            return new JsonResponse(['error' => 'File upload failed.'], 500);\n+        }\n+        array_push($productGalleries,$filename);\n+   }\n+    \n+   return $this->json($productGalleries,200);\n+   //endfile\n+}\n+\n /**\n  * @Route(\"/api/entreprises\", name=\"app_get_all_entreprise\", methods={\"GET\"})\n  */\n public function getAllEntreprises(Request $request, EntityManagerInterface $em): Response\n@@ -213,9 +247,9 @@\n     //     ]\n     // );\n        //dd($entreprise);die; \n \n-  //$em->persist($entreprise);\n+  //$em->persist($entreprise)hp \n   \n   $entreprise->setRaisonSocial($result[\"raisonSocial\"]);\n   $entreprise->setMatriculeFiscale($result[\"matriculeFiscale\"]);\n   $entreprise->setAdresse($result[\"adresse\"]);\n"
                },
                {
                    "date": 1691476918994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -247,9 +247,9 @@\n     //     ]\n     // );\n        //dd($entreprise);die; \n \n-  //$em->persist($entreprise)hp \n+  //$em->persist($entreprise)\n   \n   $entreprise->setRaisonSocial($result[\"raisonSocial\"]);\n   $entreprise->setMatriculeFiscale($result[\"matriculeFiscale\"]);\n   $entreprise->setAdresse($result[\"adresse\"]);\n"
                },
                {
                    "date": 1692349574170,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         $encoded = $passwordHasher->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n-        \n+        $\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349595784,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -72,9 +72,9 @@\n         $encoded = $passwordHasher->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n-        $\n+        $biography = new Biography()\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349603694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,8 +3,9 @@\n \n namespace App\\Controller;\n \n use App\\Entity\\User;\n+use App\\Entity\\User;\n use App\\Entity\\Entreprise;\n use App\\Entity\\ProductGallery;\n use Doctrine\\ORM\\EntityManagerInterface;\n use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n@@ -72,9 +73,9 @@\n         $encoded = $passwordHasher->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n-        $biography = new Biography()\n+        $biography = new Biography();\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349610435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n \n namespace App\\Controller;\n \n use App\\Entity\\User;\n-use App\\Entity\\User;\n+use App\\Entity\\Biography;\n use App\\Entity\\Entreprise;\n use App\\Entity\\ProductGallery;\n use Doctrine\\ORM\\EntityManagerInterface;\n use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\n"
                },
                {
                    "date": 1692349616303,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,8 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n+        \n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349621526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        \n+        $o\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349631277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $o\n+        $\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349640646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $\n+        $biography->setName\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349646840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $biography->setName\n+        $biography->setName($b)\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349658872,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $biography->setName($b)\n+        $biography->setName($)\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349668223,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,9 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $biography->setName($)\n+        $biography->setName(\"test\")\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349684495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -74,9 +74,10 @@\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n-        $biography->setName(\"test\")\n+        $biography->setName(\"test\");\n+        \n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349720271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n         $biography->setName(\"test\");\n-        \n+        $biography->getUsers()[0]\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349726774,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n         $biography->setName(\"test\");\n-        $biography->getUsers()[0]\n+        $biography->setUser()[0]\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349734875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \n         // Persister l'objet Entreprise et les utilisateurs\n         $biography = new Biography();\n         $biography->setName(\"test\");\n-        $biography->setUser()[0]\n+        $biography->setUser();\n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349741865,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,11 +73,9 @@\n         $encoded = $passwordHasher->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n         $object->getUsers()[0]->setPassword($encoded);\n \n         // Persister l'objet Entreprise et les utilisateurs\n-        $biography = new Biography();\n-        $biography->setName(\"test\");\n-        $biography->setUser();\n+        \n         $em->persist($object);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n"
                },
                {
                    "date": 1692349747410,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,11 @@\n         // Persister l'objet Entreprise et les utilisateurs\n         \n         $em->persist($object);\n         $em-> flush();\n+        $biography = new Biography();\n+        $biography->setName(\"test\");\n+        $biography->setUser($object->getUsers()[0]);\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n             ->to($object->getUsers()[0]->getEmail())\n             //->cc('cc@example.com')\n"
                },
                {
                    "date": 1692349759951,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,9 @@\n         $em-> flush();\n         $biography = new Biography();\n         $biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n+        \n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n             ->to($object->getUsers()[0]->getEmail())\n             //->cc('cc@example.com')\n"
                },
                {
                    "date": 1692349766971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,8 @@\n         $em-> flush();\n         $biography = new Biography();\n         $biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n-        \n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n             ->to($object->getUsers()[0]->getEmail())\n             //->cc('cc@example.com')\n"
                },
                {
                    "date": 1692349775450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,8 +79,10 @@\n         $em-> flush();\n         $biography = new Biography();\n         $biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n+        $em->persist($object);\n+        $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n             ->to($object->getUsers()[0]->getEmail())\n             //->cc('cc@example.com')\n"
                },
                {
                    "date": 1692349973231,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,11 +77,11 @@\n         \n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n-        $biography->setName(\"test\");\n+        $biography->setName(\"test\");biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n-        $em->persist($object);\n+        $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('houssem@digitalworld.tn')\n             ->to($object->getUsers()[0]->getEmail())\n"
                },
                {
                    "date": 1692349978965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,10 @@\n         \n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n-        $biography->setName(\"test\");biography->setName(\"test\");\n+        $biography->setName(\"test\");\n+        biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n"
                },
                {
                    "date": 1692349984574,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n         $biography->setName(\"test\");\n-        biography->setName(\"test\");\n+        \n         $biography->setUser($object->getUsers()[0]);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n"
                },
                {
                    "date": 1692350231739,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,10 +77,9 @@\n         \n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n-        $biography->setName(\"test\");\n-        \n+        //$biography->setName(\"test\");\n         $biography->setUser($object->getUsers()[0]);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n"
                },
                {
                    "date": 1692696655752,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,13 +78,13 @@\n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n         //$biography->setName(\"test\");\n-        $biography->setUser($object->getUsers()[0]);\n+        $biography->setUser($object);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n-            ->from('houssem@digitalworld.tn')\n+            ->from('Hirafy.company@gmail.com')\n             ->to($object->getUsers()[0]->getEmail())\n             //->cc('cc@example.com')\n             //->bcc('bcc@example.com')\n             //->replyTo('fabien@example.com')\n@@ -93,8 +93,9 @@\n             ->htmlTemplate('emails/signup.html.twig')\n             // pass variables (name => value) to the template\n             ->context([\n                 'token' => $object->getUsers()[0]->getToken(),\n+                'name'=> $object->getUsers()[0]->getNomComplet()\n             ]);\n         $mailer->send($email);\n         \n         return $this->json(\"success\", JsonResponse::HTTP_OK);\n"
                },
                {
                    "date": 1692778141206,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n         //$biography->setName(\"test\");\n-        $biography->setUser($object);\n+        $biography->setUser($object>getUsers()[0]);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('Hirafy.company@gmail.com')\n"
                },
                {
                    "date": 1692778190800,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,9 +78,9 @@\n         $em->persist($object);\n         $em-> flush();\n         $biography = new Biography();\n         //$biography->setName(\"test\");\n-        $biography->setUser($object>getUsers()[0]);\n+        $biography->setUser($object->getUsers()[0]);\n         $em->persist($biography);\n         $em-> flush();\n         $email = (new TemplatedEmail())\n             ->from('Hirafy.company@gmail.com')\n"
                }
            ],
            "date": 1690959125005,
            "name": "Commit-0",
            "content": "<?php\n// src/Controller/UserController.php\n\nnamespace App\\Controller;\n\nuse App\\Entity\\User;\nuse App\\Entity\\Entreprise;\nuse Doctrine\\ORM\\EntityManagerInterface;\nuse Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;\nuse Symfony\\Component\\HttpFoundation\\JsonResponse;\nuse Symfony\\Component\\HttpFoundation\\Request;\nuse Symfony\\Component\\HttpFoundation\\Response;\nuse Symfony\\Component\\PasswordHasher\\Hasher\\UserPasswordHasherInterface;\nuse Symfony\\Component\\Routing\\Annotation\\Route;\nuse Symfony\\Component\\Serializer\\Normalizer\\AbstractNormalizer;\nuse Symfony\\Component\\Serializer\\SerializerInterface;\nuse Symfony\\Component\\Serializer\\Normalizer\\ObjectNormalizer;\nuse Symfony\\Component\\Serializer\\Normalizer\\AbstractObjectNormalizer;\nuse Symfony\\Component\\Mailer\\MailerInterface;\nuse Symfony\\Component\\Mime\\Email;\nuse Symfony\\Bridge\\Twig\\Mime\\TemplatedEmail;\n\nclass EntrepriseController extends AbstractController\n{\n    /**\n     * @Route(\"/api/entreprises\", name=\"app_create_entreprise\", methods={\"POST\"})\n     */\n    public function create(Request $request, MailerInterface $mailer, UserPasswordHasherInterface $passwordHasher ,EntityManagerInterface $em ,SerializerInterface $serializer): Response\n    {\n\n            // Désérialiser l'objet Entreprise à partir des données JSON\n        $object = $serializer->deserialize($request->getContent(), Entreprise::class, 'json');\n        $object->setEnable(false);\n        \n        $find = $em->getRepository(Entreprise::class)->findOneBy([\"matriculeFiscale\"=>$object->getMatriculeFiscale()]);\n    \n        if ($find != null && $find->getTypeEntreprise()==\"Morale\") {\n            return new JsonResponse(\n                [\n                    'message' => 'Error',\n                    'error' => 'La matricule fiscale utilisée existe déja!',\n                  \n                ],\n                Response::HTTP_INTERNAL_SERVER_ERROR);\n        }\n        $find = $em->getRepository(Entreprise::class)->findOneBy([\"cin\"=>$object->getCin()]);\n        if ($find != null && $find->getTypeEntreprise()==\"Physique\") {\n            return new JsonResponse(\n                [\n                    'message' => 'Error',\n                    'error' => 'La CIN utilisée existe déja!',\n                  \n                ],\n                Response::HTTP_INTERNAL_SERVER_ERROR);\n        }\n        $find = $em->getRepository(User::class)->findOneBy([\"email\"=>$object->getUsers()[0]->getEmail()]);\n        if ($find != null) {\n            return new JsonResponse(\n                [\n                    'message' => 'Error',\n                    'error' => 'L\\'email utilisée existe déja!',\n                  \n                ],\n                Response::HTTP_INTERNAL_SERVER_ERROR);\n        }\n        // Générer le token pour le premier utilisateur et hasher son mot de passe\n        if($object->getTypeEntreprise()==\"Morale\"){\n            $object->setTel($object->getUsers()[0]->getTel());\n        }\n        $object->getUsers()[0]->generateToken();\n        $encoded = $passwordHasher->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n        $object->getUsers()[0]->setPassword($encoded);\n\n        // Persister l'objet Entreprise et les utilisateurs\n        \n        $em->persist($object);\n        $em-> flush();\n        $email = (new TemplatedEmail())\n            ->from('houssem@digitalworld.tn')\n            ->to($object->getUsers()[0]->getEmail())\n            //->cc('cc@example.com')\n            //->bcc('bcc@example.com')\n            //->replyTo('fabien@example.com')\n            //->priority(Email::PRIORITY_HIGH)\n            ->subject('Confirmation d\\'email')\n            ->htmlTemplate('emails/signup.html.twig')\n            // pass variables (name => value) to the template\n            ->context([\n                'token' => $object->getUsers()[0]->getToken(),\n            ]);\n        $mailer->send($email);\n        \n        return $this->json(\"success\", JsonResponse::HTTP_OK);\n    }\n\n     /**\n * @Route(\"/api/entreprises/edit/{id}\", name=\"app_update_entreprise\", methods={\"POST\"})\n */\npublic function update(\n    Request $request,\n    $id,\n    UserPasswordHasherInterface $passwordEncoder,\n    EntityManagerInterface $entityManager,\n    SerializerInterface $serializer\n): Response {\n    \n    $find = $entityManager->getRepository(Entreprise::class)->find($id);\n    \n    //dd($request->getContent());\n    // Check if the 'user' parameter is provided\n    $userData = $request->request->get('user');\n    if (!$userData) {\n        return new JsonResponse(['error' => 'Invalid data provided.'], 400);\n    }\n    // Deserialize the 'user' data to Entreprise object\n    $object = $serializer->deserialize($userData, Entreprise::class, 'json', [AbstractNormalizer::OBJECT_TO_POPULATE => $find]);\n\n\n    // Encode the user's password\n    $encodedPassword = $passwordEncoder->hashPassword($object->getUsers()[0], $object->getUsers()[0]->getPassword());\n    $object->getUsers()[0]->setPassword($encodedPassword);\n\n    // Handle file upload\n    $file = $request->files->get('file');\n    if (!$file) {\n        return new JsonResponse(['error' => 'No file uploaded.'], 400);\n    }\n\n    // Generate a unique filename\n    $filename = md5(uniqid()) . '.' . $file->getClientOriginalExtension();\n\n    // Define the target directory\n    $targetDirectory = $this->getParameter('kernel.project_dir') . '/public/uploads/';\n\n    // Move the uploaded file to the target directory\n    try {\n        $file->move($targetDirectory, $filename);\n    } catch (\\Exception $e) {\n        return new JsonResponse(['error' => 'File upload failed.'], 500);\n    }\n\n    // Set the filename in the Entreprise object\n    //$object->setFilename($filename);\n\n    // Persist and flush the changes\n    // dd($find);\n    //$entityManager->persist($find);\n    $entityManager->flush();\n\n    // Return the updated object as JSON response\n    return $this->json(\"success\");\n}\n    /**\n * @Route(\"/api/upload_file\", name=\"upload_file\", methods={\"POST\"})\n */\npublic function upload_file(Request $request){\n     //file\n     if (!$request->files->has('file')) {\n        return new JsonResponse(['error' => 'No file uploaded.'], 400);\n    }\n\n    // Handle the file upload\n    $file = $request->files->get('file');\n\n    // Generate a unique filename\n    $filename = md5(uniqid()) . '.' . $file->getClientOriginalExtension();\n\n    // Define the target directory\n    $targetDirectory = $this->getParameter('kernel.project_dir') . '/public/uploads/';\n\n    // Move the uploaded file to the target directory\n    try {\n        $file->move($targetDirectory, $filename);\n    } catch (\\Exception $e) {\n        return new JsonResponse(['error' => 'File upload failed.'], 500);\n    } \n    return $this->json($filename,200);\n    //endfile\n}\n\n/**\n * @Route(\"/api/entreprises\", name=\"app_get_all_entreprise\", methods={\"GET\"})\n */\npublic function getAllEntreprises(Request $request, EntityManagerInterface $em): Response\n{\n    $entrepriseRepository = $em->getRepository(Entreprise::class);\n\n    // Récupérez les entreprises triées par ordre décroissant d'ID d'insertion\n    $entreprises = $entrepriseRepository->findBy([], ['id' => 'DESC']);\n\n    return $this->json($entreprises, 200, [], ['groups' => 'read:entreprise']);\n}\n\n    /**\n * @Route(\"/api/entreprises/{id}\", name=\"app_edit_entreprise\", methods={\"PUT\"})\n */\npublic function editEntreprises($id, Request $request, SerializerInterface $serializer, EntityManagerInterface $em): Response\n{\n    $entreprise = $em->getRepository(Entreprise::class)->find($id);\n    \n    $result=json_decode($request->getContent(),true);\n    if (!$entreprise) {\n        throw $this->createNotFoundException('Entreprise introuvable.');\n    }\n\n    // $serializer->deserialize(\n    //     $request->getContent(),\n    //     Entreprise::class,\n    //     'json',\n    //     [ \n    //         AbstractNormalizer::OBJECT_TO_POPULATE =>$entreprise,\n    //         AbstractObjectNormalizer::DEEP_OBJECT_TO_POPULATE => true,\n    //     ]\n    // );\n       //dd($entreprise);die; \n\n  //$em->persist($entreprise);\n  \n  $entreprise->setRaisonSocial($result[\"raisonSocial\"]);\n  $entreprise->setMatriculeFiscale($result[\"matriculeFiscale\"]);\n  $entreprise->setAdresse($result[\"adresse\"]);\n  $entreprise->setCodePostal($result[\"codePostal\"]);\n  $entreprise->setFileRne($result[\"fileRne\"]);\n  $entreprise->setFileMatricule($result[\"fileMatricule\"]);\n  $entreprise->setLogo($result[\"logo\"]);\n  $entreprise->setCin($result[\"cin\"]);\n  $entreprise->setTypeEntreprise($result[\"typeEntreprise\"]);\n  $entreprise->setFileCin($result[\"fileCin\"]);\n  $entreprise->setTel($result[\"tel\"]);\n  $entreprise->setNameBrand($result[\"nameBrand\"]);\n  $entreprise->setEnable($result[\"enable\"]);\n//   $entreprise->getUsers()->clear();\n//   foreach($result['users']as $item){\n//     $user = new User();\n//     $user->setId($item[\"id\"]);\n//     $user->setEmail($item[\"email\"]);\n//     $user->setRoles($item[\"roles\"]);\n//     $user->setPassword($item[\"password\"]);\n//     $user->setEnable($item[\"enable\"]);\n//     $user->setToken($item[\"token\"]);\n//     $user->setCivility($item[\"civility\"]);\n//     $user->setNomComplet($item[\"nomComplet\"]);\n//     $user->setTel($item[\"tel\"]);\n//     $entreprise->addUser($user);\n\n//   }\n     $em->flush();\n    \n\n    return $this->json($entreprise, 200, [], ['groups' => 'read:entreprise']);\n}\n\n    /**\n     * @Route(\"/api/entreprises/{id}\", name=\"app_get_entreprise\", methods={\"GET\"})\n     */\n    public function getEntreprise($id, Request $request, EntityManagerInterface $em): Response\n    {\n        $entreprise = $em->getRepository(Entreprise::class)->findOneBy([\"id\"=>$id]);\n        return $this->json($entreprise,200, [], ['groups' => 'read:entreprise']);\n\n    }\n\n\n    /**\n     * @Route(\"/api/entreprises/{id}\", name=\"app_delete_entreprise\", methods={\"DELETE\"})\n     */\n    public function deleteEntreprise($id, Request $request, EntityManagerInterface $em): Response\n    {\n        $entreprise = $em->getRepository(Entreprise::class)->findOneBy([\"id\"=>$id]);\n        foreach ($entreprise->getUsers() as &$value) {\n            $value->setEntreprise(null);\n        }\n        $em->remove($entreprise);\n        $em->flush();\n        return $this->json(\"success\", JsonResponse::HTTP_OK);\n\n    }\n\n    \n   \n}\n   "
        }
    ]
}