{
    "sourceFile": "src/Entity/Entreprise.php",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1690368936301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1690368947322,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -113,14 +113,8 @@\n      * @ORM\\OneToMany(targetEntity=Depot::class, mappedBy=\"entreprise\",cascade={\"persist\"})\n      */\n     private $depots;\n \n-    /**\n-     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n-     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n-     */\n-    private $idOdoo;\n-\n     public function __construct()\n     {\n         $this->users = new ArrayCollection();\n         $this->depots = new ArrayCollection();\n@@ -360,17 +354,5 @@\n         }\n \n         return $this;\n     }\n-\n-    public function getIdOdoo(): ?string\n-    {\n-        return $this->idOdoo;\n-    }\n-\n-    public function setIdOdoo(string $idOdoo): self\n-    {\n-        $this->idOdoo = $idOdoo;\n-\n-        return $this;\n-    }\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1690368983216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n     private $fileCin;\n \n     /**\n      * @ORM\\Column(type=\"boolean\")\n-     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\"})\n+     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n      */\n     private $enable = false;\n \n     /**\n"
                },
                {
                    "date": 1690368989926,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n     private $fileCin;\n \n     /**\n      * @ORM\\Column(type=\"boolean\")\n-     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n+     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:entreprise\"})\n      */\n     private $enable = false;\n \n     /**\n"
                },
                {
                    "date": 1692607869938,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -92,9 +92,9 @@\n     private $fileCin;\n \n     /**\n      * @ORM\\Column(type=\"boolean\")\n-     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:entreprise\"})\n+     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\"})\n      */\n     private $enable = false;\n \n     /**\n@@ -154,9 +154,9 @@\n     {\n         return $this->adresse;\n     }\n \n-    public function setAdresse(string $adresse): self\n+    public function setAdresse(?string $adresse): self\n     {\n         $this->adresse = $adresse;\n \n         return $this;\n"
                },
                {
                    "date": 1692866130075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n     private $typeEntreprise;\n \n     /**\n      * @ORM\\OneToMany(targetEntity=User::class, mappedBy=\"entreprise\", cascade={\"persist\"})\n-     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n+     * @Groups({\"write:entreprise\",\"read:entreprise\", \"read:depot\"}})\n      */\n     private $users;\n \n     /**\n@@ -154,9 +154,9 @@\n     {\n         return $this->adresse;\n     }\n \n-    public function setAdresse(?string $adresse): self\n+    public function setAdresse(string $adresse): self\n     {\n         $this->adresse = $adresse;\n \n         return $this;\n"
                }
            ],
            "date": 1690368936301,
            "name": "Commit-0",
            "content": "<?php\n\nnamespace App\\Entity;\n\nuse ApiPlatform\\Core\\Annotation\\NormalizationContext;\nuse App\\Repository\\EntrepriseRepository;\nuse Doctrine\\Common\\Collections\\ArrayCollection;\nuse Doctrine\\Common\\Collections\\Collection;\nuse Doctrine\\ORM\\Mapping as ORM;\nuse Symfony\\Component\\Serializer\\Annotation\\Groups;\n\n\n\n\n/**\n * @ORM\\Entity(repositoryClass=EntrepriseRepository::class)\n */\nclass Entreprise\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\GeneratedValue\n     * @ORM\\Column(type=\"integer\")\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\", \"read:depot\"})\n     */\n    private $id;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\", \"read:depot\"})\n     */\n    private $raisonSocial;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true, unique=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\", \"read:depot\"})\n     */\n    private $matriculeFiscale;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $adresse;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $codePostal;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $fileRne;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $fileMatricule;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $logo;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true, unique=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $cin;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255)\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\", \"read:depot\"})\n     */\n    private $typeEntreprise;\n\n    /**\n     * @ORM\\OneToMany(targetEntity=User::class, mappedBy=\"entreprise\", cascade={\"persist\"})\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $users;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $fileCin;\n\n    /**\n     * @ORM\\Column(type=\"boolean\")\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\"})\n     */\n    private $enable = false;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $tel;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\",\"read:user\", \"read:depot\"})\n     */\n    private $nameBrand;\n\n    /**\n     * @ORM\\OneToMany(targetEntity=Depot::class, mappedBy=\"entreprise\",cascade={\"persist\"})\n     */\n    private $depots;\n\n    /**\n     * @ORM\\Column(type=\"string\", length=255, nullable=true)\n     * @Groups({\"write:entreprise\",\"read:entreprise\"})\n     */\n    private $idOdoo;\n\n    public function __construct()\n    {\n        $this->users = new ArrayCollection();\n        $this->depots = new ArrayCollection();\n    }\n\n    public function getId(): ?int\n    {\n        return $this->id;\n    }\n\n    public function getRaisonSocial(): ?string\n    {\n        return $this->raisonSocial;\n    }\n\n    public function setRaisonSocial(?string $raisonSocial): self\n    {\n        $this->raisonSocial = $raisonSocial;\n\n        return $this;\n    }\n\n    public function getMatriculeFiscale(): ?string\n    {\n        return $this->matriculeFiscale;\n    }\n\n    public function setMatriculeFiscale(?string $matriculeFiscale): self\n    {\n        $this->matriculeFiscale = $matriculeFiscale;\n\n        return $this;\n    }\n\n\n    public function getAdresse(): ?string\n    {\n        return $this->adresse;\n    }\n\n    public function setAdresse(string $adresse): self\n    {\n        $this->adresse = $adresse;\n\n        return $this;\n    }\n\n    public function getCodePostal(): ?string\n    {\n        return $this->codePostal;\n    }\n\n    public function setCodePostal(string $codePostal): self\n    {\n        $this->codePostal = $codePostal;\n\n        return $this;\n    }\n\n    public function getFileRne(): ?string\n    {\n        return $this->fileRne;\n    }\n\n    public function setFileRne(?string $fileRne): self\n    {\n        $this->fileRne = $fileRne;\n\n        return $this;\n    }\n\n    public function getFileMatricule(): ?string\n    {\n        return $this->fileMatricule;\n    }\n\n    public function setFileMatricule(?string $fileMatricule): self\n    {\n        $this->fileMatricule = $fileMatricule;\n\n        return $this;\n    }\n\n    public function getLogo(): ?string\n    {\n        return $this->logo;\n    }\n\n    public function setLogo(?string $logo): self\n    {\n        $this->logo = $logo;\n\n        return $this;\n    }\n\n    public function getCin(): ?string\n    {\n        return $this->cin;\n    }\n\n    public function setCin(?string $cin): self\n    {\n        $this->cin = $cin;\n\n        return $this;\n    }\n\n    public function getTypeEntreprise(): ?string\n    {\n        return $this->typeEntreprise;\n    }\n\n    public function setTypeEntreprise(string $typeEntreprise): self\n    {\n        $this->typeEntreprise = $typeEntreprise;\n\n        return $this;\n    }\n\n    /**\n     * @return Collection<int, User>\n     */\n    public function getUsers(): Collection\n    {\n        return $this->users;\n    }\n\n    public function addUser(User $user): self\n    {\n        if (!$this->users->contains($user)) {\n            $this->users[] = $user;\n            $user->setEntreprise($this);\n        }\n\n        return $this;\n    }\n\n    public function removeUser(User $user): self\n    {\n        if ($this->users->removeElement($user)) {\n            // set the owning side to null (unless alread:entreprisey changed)\n            if ($user->getEntreprise() === $this) {\n                $user->setEntreprise(null);\n            }\n        }\n\n        return $this;\n    }\n\n    public function getFileCin(): ?string\n    {\n        return $this->fileCin;\n    }\n\n    public function setFileCin(?string $fileCin): self\n    {\n        $this->fileCin = $fileCin;\n\n        return $this;\n    }\n\n    public function isEnable(): ?bool\n    {\n        return $this->enable;\n    }\n\n    public function setEnable(bool $enable): self\n    {\n        $this->enable = $enable;\n\n        return $this;\n    }\n\n    public function getTel(): ?string\n    {\n        return $this->tel;\n    }\n\n    public function setTel(?string $tel): self\n    {\n        $this->tel = $tel;\n \n        return $this;\n    }\n\n    public function getNameBrand(): ?string\n    {\n        return $this->nameBrand;\n    }\n\n    public function setNameBrand(?string $nameBrand): self\n    {\n        $this->nameBrand = $nameBrand;\n\n        return $this;\n    }\n\n\n    public function setId(int $id): self\n\n    {\n\n        $this->id = $id;\n\n\n\n\n        return $this;\n\n    }\n\n    /**\n     * @return Collection<int, Depot>\n     */\n    public function getDepots(): Collection\n    {\n        return $this->depots;\n    }\n\n    public function addDepot(Depot $depot): self\n    {\n        if (!$this->depots->contains($depot)) {\n            $this->depots[] = $depot;\n            $depot->setEntreprise($this);\n        }\n\n        return $this;\n    }\n\n    public function removeDepot(Depot $depot): self\n    {\n        if ($this->depots->removeElement($depot)) {\n            // set the owning side to null (unless already changed)\n            if ($depot->getEntreprise() === $this) {\n                $depot->setEntreprise(null);\n            }\n        }\n\n        return $this;\n    }\n\n    public function getIdOdoo(): ?string\n    {\n        return $this->idOdoo;\n    }\n\n    public function setIdOdoo(string $idOdoo): self\n    {\n        $this->idOdoo = $idOdoo;\n\n        return $this;\n    }\n}"
        }
    ]
}