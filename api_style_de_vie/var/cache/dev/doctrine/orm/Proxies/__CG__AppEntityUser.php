<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \App\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'confirm', '' . "\0" . 'App\\Entity\\User' . "\0" . 'enable', '' . "\0" . 'App\\Entity\\User' . "\0" . 'token', '' . "\0" . 'App\\Entity\\User' . "\0" . 'civility', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomComplet', '' . "\0" . 'App\\Entity\\User' . "\0" . 'tel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'entreprise', '' . "\0" . 'App\\Entity\\User' . "\0" . 'depots', '' . "\0" . 'App\\Entity\\User' . "\0" . 'simpleProducts', '' . "\0" . 'App\\Entity\\User' . "\0" . 'products', '' . "\0" . 'App\\Entity\\User' . "\0" . 'biography', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'notifications'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\User' . "\0" . 'id', '' . "\0" . 'App\\Entity\\User' . "\0" . 'email', '' . "\0" . 'App\\Entity\\User' . "\0" . 'roles', '' . "\0" . 'App\\Entity\\User' . "\0" . 'password', '' . "\0" . 'App\\Entity\\User' . "\0" . 'confirm', '' . "\0" . 'App\\Entity\\User' . "\0" . 'enable', '' . "\0" . 'App\\Entity\\User' . "\0" . 'token', '' . "\0" . 'App\\Entity\\User' . "\0" . 'civility', '' . "\0" . 'App\\Entity\\User' . "\0" . 'nomComplet', '' . "\0" . 'App\\Entity\\User' . "\0" . 'tel', '' . "\0" . 'App\\Entity\\User' . "\0" . 'entreprise', '' . "\0" . 'App\\Entity\\User' . "\0" . 'depots', '' . "\0" . 'App\\Entity\\User' . "\0" . 'simpleProducts', '' . "\0" . 'App\\Entity\\User' . "\0" . 'products', '' . "\0" . 'App\\Entity\\User' . "\0" . 'biography', '' . "\0" . 'App\\Entity\\User' . "\0" . 'firstActive', '' . "\0" . 'App\\Entity\\User' . "\0" . 'notifications'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(?int $id): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', []);

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail(string $email): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', [$email]);

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserIdentifier(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserIdentifier', []);

        return parent::getUserIdentifier();
    }

    /**
     * {@inheritDoc}
     */
    public function getUsername(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUsername', []);

        return parent::getUsername();
    }

    /**
     * {@inheritDoc}
     */
    public function getRoles(): array
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRoles', []);

        return parent::getRoles();
    }

    /**
     * {@inheritDoc}
     */
    public function setRoles(array $roles): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRoles', [$roles]);

        return parent::setRoles($roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPassword', []);

        return parent::getPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setPassword(string $password): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPassword', [$password]);

        return parent::setPassword($password);
    }

    /**
     * {@inheritDoc}
     */
    public function getSalt(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSalt', []);

        return parent::getSalt();
    }

    /**
     * {@inheritDoc}
     */
    public function eraseCredentials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'eraseCredentials', []);

        return parent::eraseCredentials();
    }

    /**
     * {@inheritDoc}
     */
    public function isConfirm(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isConfirm', []);

        return parent::isConfirm();
    }

    /**
     * {@inheritDoc}
     */
    public function setConfirm(bool $confirm): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setConfirm', [$confirm]);

        return parent::setConfirm($confirm);
    }

    /**
     * {@inheritDoc}
     */
    public function isEnable(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isEnable', []);

        return parent::isEnable();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnable(bool $enable): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnable', [$enable]);

        return parent::setEnable($enable);
    }

    /**
     * {@inheritDoc}
     */
    public function generateToken(): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'generateToken', []);

        parent::generateToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getToken(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getToken', []);

        return parent::getToken();
    }

    /**
     * {@inheritDoc}
     */
    public function setToken(string $token): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setToken', [$token]);

        return parent::setToken($token);
    }

    /**
     * {@inheritDoc}
     */
    public function getCivility(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCivility', []);

        return parent::getCivility();
    }

    /**
     * {@inheritDoc}
     */
    public function setCivility(?string $civility): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCivility', [$civility]);

        return parent::setCivility($civility);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomComplet(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomComplet', []);

        return parent::getNomComplet();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomComplet(?string $nomComplet): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomComplet', [$nomComplet]);

        return parent::setNomComplet($nomComplet);
    }

    /**
     * {@inheritDoc}
     */
    public function getTel(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTel', []);

        return parent::getTel();
    }

    /**
     * {@inheritDoc}
     */
    public function setTel(string $tel): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTel', [$tel]);

        return parent::setTel($tel);
    }

    /**
     * {@inheritDoc}
     */
    public function getEntreprise(): ?\App\Entity\Entreprise
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEntreprise', []);

        return parent::getEntreprise();
    }

    /**
     * {@inheritDoc}
     */
    public function setEntreprise(?\App\Entity\Entreprise $entreprise): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEntreprise', [$entreprise]);

        return parent::setEntreprise($entreprise);
    }

    /**
     * {@inheritDoc}
     */
    public function getDepots(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDepots', []);

        return parent::getDepots();
    }

    /**
     * {@inheritDoc}
     */
    public function addDepot(\App\Entity\Depot $depot): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addDepot', [$depot]);

        return parent::addDepot($depot);
    }

    /**
     * {@inheritDoc}
     */
    public function removeDepot(\App\Entity\Depot $depot): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeDepot', [$depot]);

        return parent::removeDepot($depot);
    }

    /**
     * {@inheritDoc}
     */
    public function getSimpleProducts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSimpleProducts', []);

        return parent::getSimpleProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function addSimpleProduct(\App\Entity\SimpleProduct $simpleProduct): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addSimpleProduct', [$simpleProduct]);

        return parent::addSimpleProduct($simpleProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function removeSimpleProduct(\App\Entity\SimpleProduct $simpleProduct): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeSimpleProduct', [$simpleProduct]);

        return parent::removeSimpleProduct($simpleProduct);
    }

    /**
     * {@inheritDoc}
     */
    public function getProducts(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getProducts', []);

        return parent::getProducts();
    }

    /**
     * {@inheritDoc}
     */
    public function addProduct(\App\Entity\Product $product): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addProduct', [$product]);

        return parent::addProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function removeProduct(\App\Entity\Product $product): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeProduct', [$product]);

        return parent::removeProduct($product);
    }

    /**
     * {@inheritDoc}
     */
    public function getBiography(): ?\App\Entity\Biography
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBiography', []);

        return parent::getBiography();
    }

    /**
     * {@inheritDoc}
     */
    public function setBiography(?\App\Entity\Biography $biography): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBiography', [$biography]);

        return parent::setBiography($biography);
    }

    /**
     * {@inheritDoc}
     */
    public function isFirstActive(): ?bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isFirstActive', []);

        return parent::isFirstActive();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstActive(bool $firstActive): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstActive', [$firstActive]);

        return parent::setFirstActive($firstActive);
    }

    /**
     * {@inheritDoc}
     */
    public function getNotifications(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNotifications', []);

        return parent::getNotifications();
    }

    /**
     * {@inheritDoc}
     */
    public function addNotification(\App\Entity\Notification $notification): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addNotification', [$notification]);

        return parent::addNotification($notification);
    }

    /**
     * {@inheritDoc}
     */
    public function removeNotification(\App\Entity\Notification $notification): \App\Entity\User
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeNotification', [$notification]);

        return parent::removeNotification($notification);
    }

}
